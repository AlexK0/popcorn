
syntax = "proto3";

option go_package = "github.com/AlexK0/popcorn/internal/api/popcorn";

package popcorn;

service CompilationService {
   //rpc StartCompilationSession(StartCompilationSessionRequest) returns (StartCompilationSessionReply) {}

    rpc CopyHeadersFromClientCache (CopyHeadersFromClientCacheRequest) returns (stream CopyHeadersFromClientCacheReply) {}
    rpc CopyHeadersFromGlobalCache (CopyHeadersFromGlobalCacheRequest) returns (stream CopyHeadersFromGlobalCacheReply) {}
    rpc CopyHeader (CopyHeaderRequest) returns (CopyHeaderReply) {}

    rpc CompileSource (CompileSourceRequest) returns (CompileSourceReply) {}

    rpc ClearEnvironment(ClearEnvironmentRequest) returns (ClearEnvironmentReply) {}

    rpc Status(StatusRequest) returns (StatusReply) {}
    rpc UpdateServer(UpdateServerRequest) returns (UpdateServerReply) {}
    rpc RestartServer(RestartServerRequest) returns (RestartServerReply) {}
    rpc DumpServerLog(DumpServerLogRequest) returns (DumpServerLogReply) {}
}

message SHA256Message {
    fixed64 B0_B7 = 1;
    fixed64 B8_B15 = 2;
    fixed64 B16_B23 = 3;
    fixed64 B24_B31 = 4;
}

message HeaderClientMeta {
    string FilePath = 1;
    int64 MTime = 2;
}

message StartCompilationSessionRequest {

}

message CopyHeadersFromClientCacheRequest {
    SHA256Message ClientID = 1;
    repeated HeaderClientMeta ClientHeaders = 2;
    bool ClearEnvironmentBeforeCopy = 3;
}

message CopyHeadersFromClientCacheReply {
    int32 MissedHeaderIndex = 1;
    bool FullCopyRequired = 2;
}

message HeaderGlobalMeta {
    HeaderClientMeta ClientMeta = 1;
    SHA256Message SHA256sum = 2;
}

message CopyHeadersFromGlobalCacheRequest {
    SHA256Message ClientID = 1;
    repeated HeaderGlobalMeta GlobalHeaders = 2;
}

message CopyHeadersFromGlobalCacheReply {
    int32 MissedHeaderIndex = 1;
}

message HeaderFullData {
    HeaderGlobalMeta GlobalMeta = 1;
    bytes HeaderBody = 2;
}

message CopyHeaderRequest {
    SHA256Message ClientID = 1;
    HeaderFullData Header = 2;
}

message CopyHeaderReply {}

message CompileSourceRequest {
    SHA256Message ClientID = 1;
    string FilePath = 2;
    string Compiler = 3;
    repeated string CompilerArgs = 4;
    bytes SourceBody = 5;
    bool ClearEnvironmentAfterBuild = 6;
}

message CompileSourceReply {
    int32 CompilerRetCode = 1;
    bytes CompiledSource = 2;
    bytes CompilerStdout = 3;
    bytes CompilerStderr = 4;
}

message ClearEnvironmentRequest {
    SHA256Message ClientID = 1;
}

message ClearEnvironmentReply {
}

message StatusRequest {}

message StatusReply {
    string ServerVersion = 1;

    uint64 CPUsCount = 2;
    uint64 ActiveGoroutinesCount = 3;
    uint64 ClientsCount = 4;

    uint64 SystemHeadersUsedCount = 5;
    uint64 CachedHeaderOnDiskCount = 6;
    uint64 CachedHeaderOnDiskBytes = 7;

    uint64 HeapAllocBytes = 8;
    uint64 SystemAllocBytes = 9;

    uint64 UptimeNanoseconds = 10;
}

message UpdateServerRequest {
    bytes NewBinary = 1;
    string Password = 2;
}

message UpdateServerReply {
}

message RestartServerRequest {
    string Password = 1;
}

message RestartServerReply {
}

message DumpServerLogRequest {
    string Password = 1;
    uint64 BytesLimit = 2;
}

message DumpServerLogReply {
    bytes LogData = 1;
}
